# Generated by Django 5.0.1 on 2024-01-25 15:47

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_num', models.IntegerField(unique=True)),
                ('course_num', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(choices=[('uz', "O'zbek guruh"), ('eng', 'Ingliz guruh'), ('rus', 'Rus guruh')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Guruhlar',
                'db_table': 'groups',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Fanlar',
                'db_table': 'lessons',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('degree', models.CharField(choices=[('master', 'Master'), ('bachelor', 'Bachelor'), ('academic', 'Academic'), ('drscience', 'DrScience'), ('phd', 'PhD')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Uztozlar',
                'db_table': 'teachers',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('login_id', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('telegram_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('course_num', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('is_active', models.BooleanField(default=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='feedbackbot.group')),
            ],
            options={
                'verbose_name_plural': 'Talabalar',
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score_for_teacher', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback', models.TextField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedbackbot.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedbackbot.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedbackbot.teacher')),
            ],
            options={
                'verbose_name_plural': 'Baholar',
                'db_table': 'scores',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ManyToManyField(related_name='lessons', to='feedbackbot.teacher'),
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day', models.CharField(choices=[('MON', 'Dushanba'), ('TUE', 'Seshanba'), ('WED', 'Chorshanba'), ('THU', 'Payshanba'), ('FRI', 'Juma'), ('SAT', 'Shanba')], max_length=10)),
                ('start_time', models.CharField(choices=[('08:30', '1-PARA, 08:30'), ('10:00', '2-PARA, 10:00'), ('11:30', '3-PARA, 11:30'), ('13:00', '4-PARA, 13:00'), ('13:30', '5-PARA, 13:30'), ('15:00', '6-PARA, 15:00'), ('16:30', '7-PARA, 16:30')], max_length=5)),
                ('end_time', models.CharField(blank=True, max_length=5, null=True)),
                ('room', models.IntegerField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedbackbot.group')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedbackbot.lesson')),
                ('teacher', models.ManyToManyField(related_name='class_schedule', to='feedbackbot.teacher')),
            ],
            options={
                'verbose_name_plural': 'Dars jadvali',
                'db_table': 'class_schedule',
            },
        ),
    ]
